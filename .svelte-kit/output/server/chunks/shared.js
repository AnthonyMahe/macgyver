import*as e from"devalue";const t=!1,r=new TextEncoder,n=new TextDecoder;function o(e,t){const r=e.split(/[/\\]/),n=t.split(/[/\\]/);for(r.pop();r[0]===n[0];)r.shift(),n.shift();let o=r.length;for(;o--;)r[o]="..";return r.concat(n).join("/")}function s(e){if(globalThis.Buffer)return globalThis.Buffer.from(e).toString("base64");let t="";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return btoa(t)}const a="x-sveltekit-invalidated",l="x-sveltekit-trailing-slash";function i(t,r){const n=Object.fromEntries(Object.entries(r).map(([e,t])=>[e,t.encode]));return e.stringify(t,n)}function c(e,t){if(void 0===e)return"";const r=i(e,t);return s((new TextEncoder).encode(r)).replaceAll("=","").replaceAll("+","-").replaceAll("/","_")}function f(t,r){if(!t)return;const o=n.decode(function(e){if(globalThis.Buffer){const t=globalThis.Buffer.from(e,"base64");return new Uint8Array(t)}const t=atob(e),r=new Uint8Array(t.length);for(let n=0;n<t.length;n++)r[n]=t.charCodeAt(n);return r}(t.replaceAll("-","+").replaceAll("_","/"))),s=Object.fromEntries(Object.entries(r).map(([e,t])=>[e,t.decode]));return e.parse(o,s)}function u(e,t){return e+"/"+t}export{t as B,a as I,l as T,r as a,s as b,u as c,c as d,o as g,f as p,i as s,n as t};
